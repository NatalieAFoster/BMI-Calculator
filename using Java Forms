/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Natalie
 */
public class BMIC1 extends javax.swing.JFrame {
    
    double inches; //imperial measurement
    double pounds; //imperial measurement
    double cm; //metric measurement
    double kgs;//metric measurement
    double Rni; //variable for imperial calculation
    double totali; // imperial total
    double Rnm; //variable for metric calculation
    double totalm; //metric total
    boolean female=false;   // for female radio button
    boolean male=false;     // for male radio button
    boolean metric=false;   // for metric radio button
    boolean imperial=false; // for imperial radio button
    int age;//age variable
 
    /**
     * Creates new form BMIC1
     */
    public BMIC1() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jTextField5 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        RBImperial = new javax.swing.JRadioButton();
        RBMetric = new javax.swing.JRadioButton();
        Txtage = new javax.swing.JTextField();
        RBMale = new javax.swing.JRadioButton();
        RBFemale = new javax.swing.JRadioButton();
        mHeight = new javax.swing.JTextField();
        mWeight = new javax.swing.JTextField();
        iCal = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        iHeight = new javax.swing.JTextField();
        iWeight = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        Tot1 = new javax.swing.JTextField();
        Cat1 = new javax.swing.JTextField();
        Clear = new javax.swing.JButton();
        mCal = new javax.swing.JButton();
        Cat2 = new javax.swing.JTextField();

        jTextField5.setText("jTextField5");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe Print", 1, 36)); // NOI18N
        jLabel1.setText("BMI Calculator");

        jLabel2.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N
        jLabel2.setText("Unit");

        jLabel3.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N
        jLabel3.setText("Age");

        jLabel4.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N
        jLabel4.setText("Sex");

        jLabel5.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N
        jLabel5.setText("Height");

        jLabel6.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N
        jLabel6.setText("Weight");

        RBImperial.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        RBImperial.setText("Imperial");
        RBImperial.setEnabled(false);
        RBImperial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RBImperialActionPerformed(evt);
            }
        });

        RBMetric.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        RBMetric.setText("Metric");
        RBMetric.setEnabled(false);
        RBMetric.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RBMetricActionPerformed(evt);
            }
        });

        Txtage.setInheritsPopupMenu(true);
        Txtage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtageActionPerformed(evt);
            }
        });
        Txtage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TxtageKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtageKeyTyped(evt);
            }
        });

        RBMale.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        RBMale.setText("Male");
        RBMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RBMaleActionPerformed(evt);
            }
        });

        RBFemale.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        RBFemale.setText("Female");
        RBFemale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RBFemaleActionPerformed(evt);
            }
        });

        mHeight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mHeightActionPerformed(evt);
            }
        });

        mWeight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mWeightActionPerformed(evt);
            }
        });

        iCal.setBackground(new java.awt.Color(204, 204, 204));
        iCal.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        iCal.setForeground(new java.awt.Color(51, 51, 51));
        iCal.setText("Calculate");
        iCal.setEnabled(false);
        iCal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iCalActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        jLabel7.setText("Metric");

        jLabel8.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        jLabel8.setText("Imperial");

        jLabel10.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel10.setText("cm");

        jLabel11.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel11.setText("kg");

        jLabel12.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N
        jLabel12.setText("Height");

        jLabel13.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N
        jLabel13.setText("Weight");

        iHeight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iHeightActionPerformed(evt);
            }
        });

        iWeight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iWeightActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel15.setText("lbs");

        jLabel16.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("st");

        jLabel17.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel17.setText("in");

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bmi.png"))); // NOI18N

        jLabel20.setFont(new java.awt.Font("Segoe Print", 1, 24)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(102, 102, 102));
        jLabel20.setText("BMI:");

        Tot1.setFont(new java.awt.Font("Segoe Print", 1, 30)); // NOI18N
        Tot1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Tot1.setText("Total");
        Tot1.setBorder(null);
        Tot1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Tot1ActionPerformed(evt);
            }
        });

        Cat1.setFont(new java.awt.Font("Segoe Print", 1, 24)); // NOI18N
        Cat1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Cat1.setText("Category");
        Cat1.setBorder(null);
        Cat1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cat1ActionPerformed(evt);
            }
        });

        Clear.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        Clear.setText("Clear");
        Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearActionPerformed(evt);
            }
        });

        mCal.setBackground(new java.awt.Color(204, 204, 204));
        mCal.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        mCal.setForeground(new java.awt.Color(51, 51, 51));
        mCal.setText("Calculate");
        mCal.setEnabled(false);
        mCal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mCalActionPerformed(evt);
            }
        });
        mCal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                mCalKeyTyped(evt);
            }
        });

        Cat2.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        Cat2.setForeground(new java.awt.Color(255, 0, 51));
        Cat2.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        Cat2.setBorder(null);
        Cat2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cat2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(mWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jLabel11))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(mHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jLabel10)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(21, 21, 21))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(mCal)
                                .addGap(3, 3, 3)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(iCal))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(121, 121, 121)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(RBMetric)
                                            .addComponent(RBMale)
                                            .addComponent(Txtage, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(22, 22, 22)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(RBFemale)
                                                    .addComponent(RBImperial))
                                                .addGap(0, 0, Short.MAX_VALUE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(Cat2)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(89, 89, 89)
                                        .addComponent(jLabel18)
                                        .addGap(108, 108, 108)))
                                .addComponent(jLabel8)
                                .addGap(68, 68, 68))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(338, 338, 338)
                                .addComponent(jLabel20))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(197, 197, 197)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4))
                                .addGap(311, 311, 311)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel12))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(iWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel15))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(iHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel17)))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(75, 75, 75))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(305, 305, 305)
                .addComponent(Clear, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(223, 223, 223))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(303, 303, 303)
                        .addComponent(Tot1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(278, 278, 278)
                        .addComponent(Cat1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel16))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RBFemale)
                    .addComponent(jLabel4)
                    .addComponent(RBMale))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(Txtage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Cat2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(mHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(mWeight)
                            .addComponent(jLabel11))
                        .addGap(241, 241, 241))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel12)
                                    .addComponent(iHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel17))
                                .addGap(12, 12, 12)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel13)
                                    .addComponent(iWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel15)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(RBMetric)
                                    .addComponent(RBImperial, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel18)))
                        .addGap(5, 5, 5)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(iCal)
                            .addComponent(mCal))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel16)
                                .addGap(86, 86, 86))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Tot1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Cat1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Clear, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        

    private void Tot1ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        // TODO add your handling code here:
    }                                    

    private void iWeightActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
    }                                       

    private void iHeightActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
    }                                       

    private void iCalActionPerformed(java.awt.event.ActionEvent evt) {                                     
     
        //Imperial
        inches = Double.parseDouble(iHeight.getText()); //inches to imperial height text box
        pounds = Double.parseDouble(iWeight.getText()); //pounds to imperial weight text box
       
        // calculation for imperial bmi weight/height * height *703
        totali=pounds/Math.pow(inches, 2); 
        Rni=Math.round(totali*703);
        Tot1.setText(Double.toString(Rni));
        
        //If statements that print out level of BMI based on imperial calculation         
        if(Rni<18.5){
            Cat1.setText("Underweight");
        
        }else if(Rni>=18.5 && Rni <=24.9){
            Cat1.setText("Normal");
            
        }else if(Rni>=25 && Rni <=29.9){
            Cat1.setText("Overweight");
                    
        }else if (Rni>=30){
            Cat1.setText("Obese");
            
        }else if (Rni<=0){
            Cat1.setText("Incorrect BMI");
        }
    }                                    

    private void mWeightActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
    }                                       

    private void mHeightActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
    }                                       

    private void RBMaleActionPerformed(java.awt.event.ActionEvent evt) {                                       
        //Radio button for male will select if female is not
        if(male=true){
            RBMale.setSelected(true);
            female=false;
            RBFemale.setSelected(false);
        }
    }                                      
    private void TxtageActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // age interger to be entered in age text box
        age = Integer.parseInt(Txtage.getText());
        Txtage.setText("");
    }                                      

    private void RBMetricActionPerformed(java.awt.event.ActionEvent evt) {                                         
     //Metric Radio Button
     mCal.setEnabled (RBMale.isSelected() || RBFemale.isSelected()); 
     mCal.setEnabled((Txtage.getDocument().getLength()>=0));
     mCal.setEnabled (RBMetric.isSelected()); // Metric calulcate button will enable when RB Metric is selected
     iCal.setEnabled(false); //Imperial calculate button will remain disabled when metric is selected 
     
     //Radio button for Metric will select and Imperial will not
     if(metric=true){
         RBMetric.setSelected(true);
         imperial=false;
         RBImperial.setSelected(false);
     }
     //If Metric is selected height and weight for Imperial are disabled 
       if(RBMetric.isSelected()){
       iHeight.setEnabled(false);
       iWeight.setEnabled(false);
       mHeight.setEnabled(true);
       mWeight.setEnabled(true);
       }
       
     //If Metric radio button is selected cursor will be placed in Metric height
       if(RBMetric.isSelected()==true){
       mHeight.requestFocus();
           }
    }                                        

    private void RBImperialActionPerformed(java.awt.event.ActionEvent evt) {                                           
    
     //Imperial Radio Button
     iCal.setEnabled (RBMale.isSelected() || RBFemale.isSelected());
     iCal.setEnabled((Txtage.getDocument().getLength()>=0));
     iCal.setEnabled (RBImperial.isSelected()); //Imperial calulcate button will enable when Imperial radio Button is selected
     mCal.setEnabled(false);//Metric calculate button will remain disabled when imperial radio button is selected 
     
     //Radio button for imperial will select in metric will not
     if(imperial=true){
     RBMetric.setSelected(false);
     metric=false;
     RBImperial.setSelected(true);
     }
      //If imperial is selected height and weight for metric are disabled
       if(RBImperial.isSelected()){
       mHeight.setEnabled(false);
       mWeight.setEnabled(false);
       iHeight.setEnabled(true);
       iWeight.setEnabled(true);
        }
        //If Imperial radio button is selected cursor will be placed in imperial height
        if(RBImperial.isSelected()==true){
           iHeight.requestFocus();
        }
    }                                          

    private void Cat1ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        // TODO add your handling code here:  
    }                                    
    private void mCalActionPerformed(java.awt.event.ActionEvent evt) {                                     
        // TODO add your handling code here:
        
       //Metric
        cm = Double.parseDouble(mHeight.getText()); // centermeters to metric height text box
        kgs = Double.parseDouble(mWeight.getText()); // kilograms to metric weight box
        
        // calculation for metric bmi weight/height * height *10000
        totalm = kgs/Math.pow(cm, 2)*10000; 
        Rnm=Math.round(totalm);
        Tot1.setText(Double.toString(Rnm));
        
         //If statements that print out level of BMI based on metric calculation    
        if(Rnm <18.5){
            Cat1.setText("Underweight");
        
        }else if(Rnm>=18.5 && Rnm <=24.9){
            Cat1.setText("Normal");
            
        }else if(Rnm>=25 && Rnm <=29.9){
            Cat1.setText("Overweight");
                    
        }else if (Rnm>=30){
            Cat1.setText("Obese");
            
        }else if (Rnm<=0){
            Cat1.setText("Incorrect BMI");
       
        }
     
    }                                    

    private void mCalKeyTyped(java.awt.event.KeyEvent evt) {                              
 
    }                             

    private void ClearActionPerformed(java.awt.event.ActionEvent evt) {                                      
       
        
       //Clear all buttons
        RBFemale.setSelected(false);
        RBMale.setSelected(false);
        Txtage.setText("");
        RBMetric.setSelected(false);
        RBImperial.setSelected(false);
        mHeight.setText("");
        mWeight.setText("");  
        iHeight.setText("");
        iWeight.setText(""); 
        Tot1.setText("Total");
        Cat1.setText("Category");
        Cat2.setText("");
        
        //Disable metric and imperial radio button so they can only be select once age is completed
        RBMetric.setEnabled(false);
        RBImperial.setEnabled(false);
        
        //enabled height and weight for imperial and metric untill one is selected
        mHeight.setEnabled(true);
        mWeight.setEnabled(true);  
        iHeight.setEnabled(true);
        iWeight.setEnabled(true);
        
        //disable metric and imperial calculate button so they can only be select once a unit is selected
        iCal.setEnabled(false);
        mCal.setEnabled(false);
        
    }                                     

    private void TxtageKeyTyped(java.awt.event.KeyEvent evt) {                                
       RBMetric.setEnabled((Txtage.getDocument().getLength()>=0)); //enabled metric radio button when age is completed
       RBImperial.setEnabled((Txtage.getDocument().getLength()>=0)); //enabled imperial radio button when age is completed
       
       if(age >=110){
       Cat2.setText("Incorrect Age"); //text stating incorrect age will appear if an age over or equal to 110  is entered
       }
    }                               

    private void RBFemaleActionPerformed(java.awt.event.ActionEvent evt) {                                         
       
        //radio button for female will select and male will not
        if(female=true){
            RBMale.setSelected(false);
            male=false;
            RBFemale.setSelected(true);
        }
    }                                        

    private void Cat2ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        // TODO add your handling code here:
    }                                    

    private void TxtageKeyReleased(java.awt.event.KeyEvent evt) {                                   
        // TODO add your handling code here:
    }                                  
    
        
     
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BMIC1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BMIC1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BMIC1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BMIC1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BMIC1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JTextField Cat1;
    private javax.swing.JTextField Cat2;
    private javax.swing.JButton Clear;
    private javax.swing.JRadioButton RBFemale;
    private javax.swing.JRadioButton RBImperial;
    private javax.swing.JRadioButton RBMale;
    private javax.swing.JRadioButton RBMetric;
    private javax.swing.JTextField Tot1;
    private javax.swing.JTextField Txtage;
    private javax.swing.JButton iCal;
    private javax.swing.JTextField iHeight;
    private javax.swing.JTextField iWeight;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JButton mCal;
    private javax.swing.JTextField mHeight;
    private javax.swing.JTextField mWeight;
    // End of variables declaration                   
}
